{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","cardComponent","map","user","i","Scroll","style","overflow","border","height","children","SearchBox","searchfield","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAYeA,EAXJ,SAACC,GACX,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,GAAhC,cACpB,gCACC,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCYCC,EAhBA,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACVC,EAAcD,EAAOE,KAAI,SAACC,EAAKC,GACpC,OACC,cAAC,EAAD,CACAR,GAAKI,EAAOI,GAAGR,GACfC,KAAMG,EAAOI,GAAGP,KAChBC,MAAOE,EAAOI,GAAGN,OAHNM,MAOb,OACE,8BACOH,KCLKI,EATF,SAACb,GAEb,OACC,qBAAKc,MAAO,CAACC,SAAU,SAASC,OAAQ,kBAAmBC,OAAQ,SAAnE,SACEjB,EAAMkB,YCSKC,EAZC,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAC7B,OACC,qBAAKpB,UAAU,MAAf,SACA,uBACCA,UAAU,mCACTqB,KAAK,SACNC,YAAY,gBACZC,SAAUH,OC4CEI,G,wDA9Cd,aAAc,IAAD,8BACZ,gBAgBDC,eAAe,SAACC,GACf,EAAKC,SAAS,CAACR,YAAaO,EAAME,OAAOC,SAhBzC,EAAKC,MAAM,CACTvB,OAAO,GACPY,YAAY,IAJF,E,qDAOb,WAAoB,IAAD,OAClBY,MAAM,8CACLC,MAAK,SAAAC,GACL,OAAOA,EAASC,UAEhBF,MAAK,SAAAG,GACL,EAAKR,SAAS,CAACpB,OAAO4B,S,oBASxB,WAAS,IAAD,OACDC,EAAeC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA/B,GAC7C,OAAOA,EAAOH,KAAKmC,cAAcC,SAAS,EAAKV,MAAMX,YAAYoB,kBAElE,OAAgC,IAA7BF,KAAKP,MAAMvB,OAAOkC,OAEb,4CAKP,sBAAKzC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWoB,aAAciB,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAQ6B,a,GAtCPM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACH,cAAC,EAAD,IACFC,SAASC,eAAe,SAK5BX,M","file":"static/js/main.acc0f42a.chunk.js","sourcesContent":["import React from 'react';\r\nconst Card=(props)=>{\r\n\treturn(\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t<img alt='robot' src={`https://robohash.org/${props.id}?200x200`}/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{props.name}</h2>\r\n\t\t\t\t<p>{props.email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList=({robots})=> {\r\n\tconst cardComponent=robots.map((user,i) =>{\r\n\t\treturn (\r\n\t\t\t<Card key={i} \r\n\t\t\tid ={robots[i].id} \r\n\t\t\tname={robots[i].name} \r\n\t\t\temail={robots[i].email}/>\r\n\t\t);\r\n\t})\r\n\t\t\r\n\treturn(\r\n\t\t <div>\r\n         {cardComponent}\r\n         </div>\r\n\t);\r\n}\r\nexport default CardList;","import React from 'react';\r\nconst Scroll=(props)=>\r\n{\r\n\treturn(\r\n\t\t<div style={{overflow: 'Scroll',border: '1px solid black', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox=({searchfield,searchChange})=>{\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t<input\t\r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t type='search' \r\n\t\t\tplaceholder='search robots'\r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default SearchBox;","import React,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\t\trobots:[],\r\n\t\t\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=>{\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.then(users=>{\r\n\t\t\tthis.setState({robots:users})\r\n\t\t})\r\n\r\n\t}\r\n\tonSearchChange=(event)=>{\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t\t\r\n\t\r\n\t}\r\n\trender(){\r\n\t\tconst filteredRobots=this.state.robots.filter(robots=>{\r\n\t\t\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\t\tif(this.state.robots.length === 0)\r\n\t\t{\r\n\t\t\treturn <h1>Loading...</h1>\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t\treturn(\r\n\t\t\t<div className='tc'>\t\r\n\t\t    \t<h1 className='f1'>RoboFriends</h1>\r\n\t\t    \t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t    \t<Scroll>\r\n\t\t\t    <CardList robots={filteredRobots}/>\r\n\t\t\t    </Scroll>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import Card from './Card';\n// import CardList from './CardList'\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n      <App />\n  , document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}